class Solution {
public:
    // Function to calculate the square root of a number 'x' (integer part only)
    int mySqrt(int x) {
        // Handle the case where the input is 0
        if (x == 0) {
            return 0;  // Square root of 0 is 0
        }

        int l = 1, r = x;  // Initialize the search space between 1 and x
        long long int ans;  // Variable to store the result

        // Continue searching while the left boundary is less than or equal to the right
        while (l <= r) {
            long long mid = l + (r - l) / 2;  // Calculate the middle point
            
            // If mid squared is equal to x, we found the exact square root
            if (mid * mid == x) {
                ans = mid;  // Store mid as the answer
                break;  // Exit the loop since we found the exact answer
            }

            // If mid squared is less than x, search the right half
            if (mid * mid < x) {
                l = mid + 1;  // Move the left boundary to mid + 1
                ans = mid;  // Update the answer with mid, as it's the closest so far
            } 
            // If mid squared is greater than x, search the left half
            else {
                r = mid - 1;  // Move the right boundary to mid - 1
            }
        }

        return ans;  // Return the integer part of the square root
    }
};
