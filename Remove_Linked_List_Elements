class Solution {
public:
    // Function to remove all elements from a linked list that have a specific value
    ListNode* removeElements(ListNode* head, int val) {
        // Step 1: Handle cases where the head nodes themselves need to be removed
        // As long as the head is not null and its value matches the target value,
        // move the head pointer to the next node.
        while (head != nullptr && head->val == val) {
            head = head->next;
        }

        // Step 2: Initialize a pointer to traverse the rest of the list
        ListNode* current = head;

        // Step 3: Traverse the list and remove nodes that have the target value
        while (current != nullptr && current->next != nullptr) {
            // If the next node's value matches the target value,
            // skip the next node by linking the current node to the node after the next.
            if (current->next->val == val) {
                current->next = current->next->next;
            } else {
                // Otherwise, move the current pointer to the next node
                current = current->next;
            }
        }
        
        // Step 4: Return the head of the modified list
        return head;
    }
};
